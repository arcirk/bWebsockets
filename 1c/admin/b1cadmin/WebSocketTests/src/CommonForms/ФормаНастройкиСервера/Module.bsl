&НаКлиенте
Перем ОбъектКомпоненты;

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	КлючОбъекта = "WebCore";
	КлючНастроек = "Настройки";
	ЛокальныеНастройки = МенеджерВебСокетВызовСервера.ПолучитьЛокальныеНастройкиКлиента();
	ЛокальныеНастройки.Вставить("КаталогОтладки", КаталогОтладки);
	ЛокальныеНастройки.Вставить("РежимОтладки", РежимОтладки);
	Если НЕ ИспользоватьУчетныеДанныеТекущегоПользователя Тогда
		ЛокальныеНастройки.Вставить("ИмяПользователя", ИмяПользователя);
		ЛокальныеНастройки.Вставить("ХешПользователя", ХешПользователя);
	Иначе
		ЛокальныеНастройки.Вставить("ИмяПользователя", ИмяПользователя());
		Идентификатор = Пользователи.ПустойУникальныйИдентификатор();
		Если Метаданные.Справочники.Найти("Пользователи") = Неопределено Тогда
			ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователя());
			Идентификатор = ПользовательИБ.УникальныйИдентификатор;
		Иначе
			ТекущийПользователь = Пользователи.ТекущийПользователь();
			Идентификатор = ТекущийПользователь.УникальныйИдентификатор();
		КонецЕсли;
		ИсходнаяСтрока = НРег(ЛокальныеНастройки.ИмяПользователя) + XMLСтрока(Идентификатор);
		ЛокальныеНастройки.Вставить("ХешПользователя", НРЕг(ПолучитьХешСуммы(ИсходнаяСтрока)));
	КонецЕсли;	
	ЛокальныеНастройки.Вставить("ИспользоватьДанныеПользователя", ИспользоватьУчетныеДанныеТекущегоПользователя);
	ЛокальныеНастройки.Вставить("ПодключатсяАвтоматически", ПодключатсяАвтоматически);
	//@skip-check Undefined variable
	ЛокальныеНастройки.Вставить("ВосстановитьСоединениеПриРазрыве", ВосстановитьСоединениеПриРазрыве);
	ХранилищеОбщихНастроек.Сохранить(КлючОбъекта, КлючНастроек, ЛокальныеНастройки, ,ИмяПользователя());	
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	ЛокальныеНастройки = МенеджерВебСокетВызовСервера.ПолучитьЛокальныеНастройкиКлиента();

	Если ТипЗнч(ЛокальныеНастройки) = Тип("Структура") ТОгда
		КаталогОтладки = ЛокальныеНастройки.КаталогОтладки;
		РежимОтладки = ЛокальныеНастройки.РежимОтладки;	
		ИспользоватьУчетныеДанныеТекущегоПользователя = ЛокальныеНастройки.ИспользоватьДанныеПользователя;
		ИмяПользователя = ЛокальныеНастройки.ИмяПользователя;
		ХешПользователя = ЛокальныеНастройки.ХешПользователя;
		ПодключатсяАвтоматически = ЛокальныеНастройки.ПодключатсяАвтоматически;
		ВосстановитьСоединениеПриРазрыве = ЛокальныеНастройки.ВосстановитьСоединениеПриРазрыве;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Асинх Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьЭлементов();
	СтруктураОповещений = МенеджерВебСокетКлиент.ПолучитьСтруктуруОповещенийФормы();
	СтруктураОповещений.Вставить("ОповещениеОСообщении", Новый ОписаниеОповещения("ПриПолученииСоообщения",  ЭтотОбъект));
	СтруктураОповещений.Вставить("ОповещениеООшибке", Новый ОписаниеОповещения("ПриОшибке",  ЭтотОбъект));
	МенеджерВебСокетКлиент.ПодключитьФорму(ЭтотОбъект, СтруктураОповещений);
	ОбъектКомпоненты = глВебСокетКлиент.ОбъектКомпоненты;
	Если Ждать Запущен() Тогда
		ПолучитьКонфигурациюСервера();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если Ждать Запущен() Тогда
		СтруктураКомандСервера = Ждать ОбъектКомпоненты.ПолучитьСтруктуруКомандСервераАсинх();
		Если СтруктураКомандСервера <> Неопределено Тогда
			СтруктураКоманд = МенеджерВебСокетВызовСервера.ПрочитатьОтветСервера(СтруктураКомандСервера.Значение);
			Если ТипЗнч(СтруктураКоманд) = Тип("Структура") Тогда	
				ОбновитьСтруктуруКонфигурацииСервера();				
				//Здесь будет вызвано исключение если версия сервера не поддерживается
				ОбъектКомпоненты.КомандаСерверуАсинх(СтруктураКоманд.UpdateServerConfiguration, 
				МенеджерВебСокетВызовСервера.ОбъектВJson(Новый Структура("config", КонфигурацияСервера)), 
				МенеджерВебСокетВызовСервера.ИдентификаторСтрокой(УникальныйИдентификатор));
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтруктуруКонфигурацииСервера()
	Если ТипЗнч(КонфигурацияСервера) = Тип("Структура") ТОгда
		КонфигурацияСервера.WebDavHost = НаборКонстант.DavСервис;
		КонфигурацияСервера.WebDavUser = НаборКонстант.DavСеривсПользователь;	
		КонфигурацияСервера.HSHost = НаборКонстант.HttpСервис;
		КонфигурацияСервера.HSUser = НаборКонстант.HttpСервисПользователь;
		КонфигурацияСервера.ExchangePlan = НаборКонстант.ИдентификаторПланаОбмена;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПолучитьКонфигурациюСервера()
	СтруктураКомандСервера = Ждать ОбъектКомпоненты.ПолучитьСтруктуруКомандСервераАсинх();
	Если СтруктураКомандСервера <> Неопределено Тогда
		СтруктураКоманд = МенеджерВебСокетВызовСервера.ПрочитатьОтветСервера(СтруктураКомандСервера.Значение);
		Если ТипЗнч(СтруктураКоманд) = Тип("Структура") Тогда					
			//Здесь будет вызвано исключение если версия сервера не поддерживается
			ОбъектКомпоненты.КомандаСерверуАсинх(СтруктураКоманд.ServerConfiguration, 
			"{}", 
			МенеджерВебСокетВызовСервера.ИдентификаторСтрокой(УникальныйИдентификатор));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	МенеджерВебСокетКлиент.ФормаПриЗакрытии(УникальныйИдентификатор);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимОтладкиПриИзменении(Элемент)
	Элементы.КаталогОтладки.Доступность = РежимОтладки;
КонецПроцедуры

&НаКлиенте
Процедура ТребуетсяАвторизацияНаСервереПриИзменении(Элемент)
	УстановитьДоступностьЭлементов();
КонецПроцедуры

&НаКлиенте
Асинх Процедура КаталогОтладкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Результат = Ждать Диалог.ВыбратьАсинх();	
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		КаталогОтладки = Результат[0];
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Процедура КаталогУстановкиСервераНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Результат = Ждать Диалог.ВыбратьАсинх();	
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		НаборКонстант.РабочийКаталогСервера = Результат[0];
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьУчетныеДанныеТекущегоПользователяПриИзменении(Элемент)
	УстановитьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура УстановитьПарольПользователя(Команда)
#Если НЕ ВебКлиент Тогда
	Если СокрЛП(ИмяПользователя) = "" Тогда
		Ждать ПредупреждениеАсинх("Не указано имя пользователя!");
		Возврат;
	КонецЕсли;
#КонецЕсли			
	Элементы.ГруппаПароль.Видимость = Истина;
	Элементы.УстановитьПарольПользователя.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПолучитьХешУчетныхДанных(Команда)
	ИсходнаяСтрока = ВРег(ИмяПользователя) + ПарольПользователя;
	ХешПользователя = НРЕг(ПолучитьХешСуммы(ИсходнаяСтрока));
	Элементы.ГруппаПароль.Видимость = Ложь;
	Элементы.УстановитьПарольПользователя.Видимость = Истина;
КонецПроцедуры

&НаКлиенте
Процедура HttpСервисПоказатьПароль(Команда)
	Если Команда.Пометка Тогда
		Элементы.HttpСервисПоказатьПароль.Картинка = БиблиотекаКартинок.СкрытьПароль;
		Элементы.HttpСервисПароль.РежимПароля = Ложь;
	Иначе
		Элементы.HttpСервисПоказатьПароль.Картинка = БиблиотекаКартинок.ПоказатьПароль;
		Элементы.HttpСервисПароль.РежимПароля = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура DavСервисПоказатьПароль(Команда)
	//TODO: Вставить содержимое обработчика
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьКлиента(Команда)	
	МенеджерВебСокетКлиент.ПодключитьКлиента();
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьКлиента(Команда)
	МенеджерВебСокетКлиент.ОтключитьКлиента();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Функция Запущен()
	Если ОбъектКомпоненты = Неопределено Тогда
		Возврат Ложь;
	Иначе
		Результат = Ждать ОбъектКомпоненты.ЗапущенАсинх();
		Возврат Результат.Значение;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура УстановитьДоступностьЭлементов()
	Элементы.ИмяПользователя.Доступность = НЕ ИспользоватьУчетныеДанныеТекущегоПользователя;
	Элементы.ИмяПользователя.АвтоОтметкаНезаполненного = НЕ ИспользоватьУчетныеДанныеТекущегоПользователя;
	Элементы.УстановитьПарольПользователя.Доступность = НЕ ИспользоватьУчетныеДанныеТекущегоПользователя;		
	Элементы.ГруппаУчетныеДанные.Доступность = НаборКонстант.ТребуетсяАвторизацияНаСервере;
	Элементы.ИспользоватьУчетныеДанныеТекущегоПользователя.Доступность = НаборКонстант.ТребуетсяАвторизацияНаСервере;
	Элементы.КаталогОтладки.Доступность = РежимОтладки;
КонецПроцедуры

&НаСервере
Функция ПолучитьХешСуммы(ИсходнаяСтрока)
	ХешированиеДанных  = Новый ХешированиеДанных (ХешФункция.SHA1) ;
 	ХешированиеДанных.Добавить(ИсходнаяСтрока);
 	Возврат ПолучитьHexСтрокуИзДвоичныхДанных(ХешированиеДанных.ХешСумма)
КонецФункции

&НаКлиенте
Процедура ПриПолученииСоообщения(Результат, ДополнителныеПараметры) Экспорт
	Попытка
		Если ТипЗнч(Результат) = Тип("Структура") Тогда
			Если Результат.command = "ServerConfiguration" Тогда
				ОтветСервера = МенеджерВебСокетВызовСервера.ОбработатьОтветСервера(Результат.result);
				Если ТипЗнч(ОтветСервера) = Тип("Структура") ТОгда
					КонфигурацияСервера = ОтветСервера;
				КонецЕсли;
			Иначе
			КонецЕсли;
		КонецЕсли;
	Исключение
		//@skip-check use-non-recommended-method
		Сообщить("Не верный формат сообщения!", СтатусСообщения.Важное);
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеФормы()

	Если ТипЗнч(КонфигурацияСервера) = Тип("Структура") Тогда
		КонфигурацияСервера.Свойство("WebDavHost", НаборКонстант.DavСервис);
		КонфигурацияСервера.Свойство("WebDavUser", НаборКонстант.DavСеривсПользователь);
		КонфигурацияСервера.Свойство("DavСервисПароль", НаборКонстант.DavСервисПароль);
		КонфигурацияСервера.Свойство("HSHost", НаборКонстант.HttpСервис);
		КонфигурацияСервера.Свойство("HSUser", НаборКонстант.HttpСервисПользователь);
		КонфигурацияСервера.Свойство("HSPassword", НаборКонстант.HttpСервисПароль);
		КонфигурацияСервера.Свойство("ExchangePlan", НаборКонстант.ИдентификаторПланаОбмена)
	КонецЕсли;

КонецПроцедуры

&НаКлиенте 
Процедура ПриОшибке(Результат, ДополнителныеПараметры) Экспорт
	//@skip-check use-non-recommended-method
	Сообщить("ФормаАктивныеПользователи::ПриОшибке");
КонецПроцедуры

#КонецОбласти


