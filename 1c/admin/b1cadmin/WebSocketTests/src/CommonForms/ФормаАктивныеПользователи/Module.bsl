
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если глВебСокетКлиент = Неопределено ИЛИ глВебСокетКлиент.ОбъектКомпоненты = Неопределено Тогда
		ПоказатьПредупреждение(Неопределено, "Компонента не загружена!");
		Возврат;
	КонецЕсли;
	
	СтруктураОповещений = МенеджерВебСокетКлиент.ПолучитьСтруктуруОповещенийФормы();
	СтруктураОповещений.Вставить("ОповещениеОСообщении", Новый ОписаниеОповещения("ПриПолученииСоообщения",  ЭтотОбъект));
	СтруктураОповещений.Вставить("ОповещениеООшибке", Новый ОписаниеОповещения("ПриОшибке",  ЭтотОбъект));
	МенеджерВебСокетКлиент.ПодключитьФорму(ЭтотОбъект, СтруктураОповещений);
	
	МенеджерВебСокетКлиент.ПолучитьСписокАктивныхПользователей(УникальныйИдентификатор);
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	МенеджерВебСокетКлиент.ФормаПриЗакрытии(УникальныйИдентификатор);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ПривязатьКУстройству(Команда)
	
	ТекущаяСтрока = Элементы.АктивныеПользователи.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		#Если НЕ ВебКлиент Тогда
		Ждать ПредупреждениеАсинх("Не выбрана сессия!");
		#КонецЕсли
		Возврат;
	КонецЕсли;
	
	РезультатВыбора = Ждать ВопросАсинх("Привязка к устройству в базе производится в случае если не возможно получить статичный ID на самом устройстве. Продолжить?", РежимДиалогаВопрос.ДаНет);
	Если РезультатВыбора = КодВозвратаДиалога.Нет  Тогда
		Возврат;
	КонецЕсли;

	Оповещение = Новый ОписаниеОповещения("ПриВыбореУстройства", ЭтотОбъект, Новый Структура("ТекущаяСтрока", ТекущаяСтрока));
	ОткрытьФорму("Справочник.УстройстваИКомпьютеры.ФормаВыбора", , ЭтотОбъект, , , , Оповещение);
	
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Процедура ПриВыбореУстройства(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		Если ТипЗнч(Результат) = Тип("СправочникСсылка.УстройстваИКомпьютеры") ТОгда
			ДанныеСтроки = АктивныеПользователи.НайтиПоИдентификатору(ДополнительныеПараметры.ТекущаяСтрока);
			Если ДанныеСтроки <> Неопределено тогда
				Если ДанныеСтроки.ИдентификаторУстройства = Результат.УникальныйИдентификатор() ТОгда
					#Если НЕ ВебКлиент Тогда
					Ждать ПредупреждениеАсинх("Устройство уже привязано к выбранному элелменту!");
					#КонецЕсли
					Возврат;
				Иначе
					УстановитьИдентификаторУстройстваДляУдаленнойСессии(Результат.УникальныйИдентификатор(), ДанныеСтроки.ИдентификаторСессии);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Функция КомпонентаДоступна(ПоказыватьПредупреждения = Ложь)

	Если МенеджерВебСокетКлиент.ПолучитьТекущийОбъектКомпоненты() = Неопределено Тогда
#Если НЕ ВебКлиент Тогда		
		Если ПоказыватьПредупреждения Тогда
			Ждать ПредупреждениеАсинх("Компонента не загружена!");
		КонецЕсли;
#КонецЕсли	
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ Ждать МенеджерВебСокетКлиент.Подключен() Тогда
#Если НЕ ВебКлиент Тогда		
		Если ПоказыватьПредупреждения Тогда
			Ждать ПредупреждениеАсинх("Сервер не доступен!");
		КонецЕсли;
#КонецЕсли	
		Возврат Ложь;				
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Асинх Процедура УстановитьИдентификаторУстройстваДляУдаленнойСессии(НовыйИдентификатор, ИдентификаторСессии)
	Если НЕ Ждать КомпонентаДоступна(Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектКомпоненты = Ждать МенеджерВебСокетКлиент.ПолучитьТекущийОбъектКомпоненты();

	СтруктураПараметровЗапроса = Новый Структура();
	СтруктураПараметровЗапроса.Вставить("remote_session", МенеджерВебСокетВызовСервера.ИдентификаторСтрокой(ИдентификаторСессии));	
	СтруктураПараметровЗапроса.Вставить("device_id", МенеджерВебСокетВызовСервера.ИдентификаторСтрокой(НовыйИдентификатор));			
		
	СтруктураКомандСервера = Ждать ОбъектКомпоненты.ПолучитьСтруктуруКомандСервераАсинх();
	Если СтруктураКомандСервера <> Неопределено Тогда
		СтруктураКоманд = МенеджерВебСокетВызовСервера.ПрочитатьОтветСервера(СтруктураКомандСервера.Значение);
		Если ТипЗнч(СтруктураКоманд) = Тип("Структура") Тогда					
			//Здесь будет вызвано исключение если версия сервера не поддерживается
			ОбъектКомпоненты.КомандаСерверуАсинх(СтруктураКоманд.SetNewDeviceId, 
			МенеджерВебСокетВызовСервера.ОбъектВJson(СтруктураПараметровЗапроса), 
			МенеджерВебСокетВызовСервера.ИдентификаторСтрокой(УникальныйИдентификатор));
		КонецЕсли;
	КонецЕсли;
	

КонецПроцедуры

&НаСервере
Процедура ОчиститьСписок()
	АктивныеПользователи.Очистить();
КонецПроцедуры

&НаСервере
Процедура ПриОтключенииПользователя(ИдентификаторСтрокой)
	Идентификатор = МенеджерВебСокетВызовСервера.ИдентификаторИзСтроки(ИдентификаторСтрокой);
	мАктивныеПользователи = РеквизитФормыВЗначение("АктивныеПользователи", Тип("ТаблицаЗначений"));
	НайденнаяСессия = мАктивныеПользователи.Найти(Идентификатор, "ИдентификаторСессии");
	Если НайденнаяСессия <> Неопределено Тогда
		мАктивныеПользователи.Удалить(НайденнаяСессия);	
	КонецЕсли;
	ЗначениеВРеквизитФормы(мАктивныеПользователи, "АктивныеПользователи");
КонецПроцедуры

&НаКлиенте
Процедура ПриПолученииСоообщения(Результат, ДополнителныеПараметры) Экспорт
	Попытка
		Если ТипЗнч(Результат) = Тип("Структура") Тогда
			Если Результат.command = "ServerOnlineClientsList" Тогда
				ОчиститьСписок();
				ОтветСервераТаблица = МенеджерВебСокетВызовСервера.ОбработатьОтветСервера(Результат.result);
				Если ТипЗнч(ОтветСервераТаблица) = Тип("Структура") Тогда
					Строки = ОтветСервераТаблица.rows;
					Если ТипЗнч(Строки) = Тип("Массив") тогда
						ЗаполнитьТаблицуАктивныхПользователей(Строки);
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Результат.command = "ClientLeave" Тогда 
				ПриОтключенииПользователя(Результат.sender);
			ИначеЕсли Результат.command = "ClientJoin" Тогда 
				МенеджерВебСокетКлиент.ПолучитьСписокАктивныхПользователей(УникальныйИдентификатор);
			КонецЕсли;
		КонецЕсли;
	Исключение
		//@skip-check use-non-recommended-method
		Сообщить("Не верный формат сообщения!", СтатусСообщения.Важное);
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуАктивныхПользователей(МассивСоединений)
	АктивныеПользователи.Очистить();
	Для Каждого ТекСтрока Из МассивСоединений Цикл
		НоваяСтрока = АктивныеПользователи.Добавить();
		НоваяСтрока.ВремяПодключения = ТекСтрока.start_date;
		НоваяСтрока.ИдентификаторПользователя = МенеджерВебСокетВызовСервера.ИдентификаторИзСтроки(ТекСтрока.user_uuid);
		НоваяСтрока.ИдентификаторСессии = МенеджерВебСокетВызовСервера.ИдентификаторИзСтроки(ТекСтрока.session_uuid);
		НоваяСтрока.ИмяПользователя = ТекСтрока.user_name;
		НоваяСтрока.ИмяПриложения = ТекСтрока.app_name;
		НоваяСтрока.Роль = ТекСтрока.role;
		НоваяСтрока.ИдентификаторУстройства = МенеджерВебСокетВызовСервера.ИдентификаторИзСтроки(ТекСтрока.device_id);
		НоваяСтрока.Адресс = ТекСтрока.address;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте 
Процедура ПриОшибке(Результат, ДополнителныеПараметры) Экспорт
	//@skip-check use-non-recommended-method
	Сообщить("ФормаАктивныеПользователи::ПриОшибке");
КонецПроцедуры


#КонецОбласти