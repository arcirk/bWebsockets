
&НаКлиенте
Процедура ДокументСписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	ТекущаяСтрока = ДокументСписок.НайтиПоИдентификатору(Значение);
	ОповеститьОВыборе(Новый Структура("Устройство,ИдентификаторДокумента", Устройство, ТекущаяСтрока.ИдентификаторДокумента));
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Устройство") ТОгда
		Устройство = Параметры.Устройство;	
		Заголовок = Устройство.НаименованиеПолное;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Устройство) ТОгда
		ПараметрыКоманды = ПолучитьПараметрыКоманды(XMLСтрока(Устройство));
		ТекстЗапроса = "api/info";
		СоответствиеДанные = Новый Соответствие;
		СоответствиеДанные.Вставить("command", "ExecuteSqlQuery");
		СоответствиеДанные.Вставить("param", ПараметрыКоманды); 
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку();
		ЗаписатьJSON(ЗаписьJSON, СоответствиеДанные);
		СтрокаДанные = ЗаписьJSON.Закрыть();
		HTTPСоединение = Новый HTTPСоединение("192.168.10.80", 8080);
		HTTPЗапрос = Новый HTTPЗапрос(ТекстЗапроса);
		HTTPЗапрос.Заголовки.Вставить("Content-Type", "application/json");
		HTTPЗапрос.Заголовки.Вставить("Accept", "application/json");
		Токен = МенеджерВебСокетВызовСервера.СтрокаВBase64("admin:admin");
		HTTPЗапрос.Заголовки.Вставить("Authorization", "Basic " + Токен);
		HTTPЗапрос.УстановитьТелоИзСтроки(СтрокаДанные, "UTF-8", ИспользованиеByteOrderMark.НеИспользовать);
		Попытка
			Результат = HTTPСоединение.ОтправитьДляОбработки(HTTPЗапрос);
		Исключение
			Сообщить(ОписаниеОшибки());
			Возврат;
		КонецПопытки;
	КонецЕсли;
	
	РезультатТело = Результат.ПолучитьТелоКакСтроку();
	
	Если Результат.КодСостояния = 200 ТОгда
		ОтветСервера = МенеджерВебСокетВызовСервера.ПрочитатьОтветСервера(РезультатТело);
		Если ОтветСервера.message = "OK" И СокрЛП(ОтветСервера.result) <> "" Тогда
			СписокДокументов = МенеджерВебСокетВызовСервера.ОбработатьОтветСервера(ОтветСервера.result);
			Если ТипЗнч(СписокДокументов.rows) = Тип("Массив") Тогда
				ЗаполнитьСписокДокментов(СписокДокументов.rows);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Сообщить(РезультатТело);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДокментов(МассивСтрок)
	ДокументСписок.Очистить();
	Для Каждого ТекСтрока Из МассивСтрок Цикл
		НоваяСтрока = ДокументСписок.Добавить();
		НоваяСтрока.Номер = ТекСтрока.number;
		НоваяСтрока.Дата = Дата(1970,1,1,1,0,0) + ТекСтрока.date;
		НоваяСтрока.Представление = ТекСтрока.second;
		Если СокрЛП(ТекСтрока.cache) <> "" Тогда
			Чтение = Новый ЧтениеJSON();
			Чтение.УстановитьСтроку(ТекСтрока.cache);
			Результат = ПрочитатьJSON(Чтение);
			Если Результат.Свойство("comment") Тогда
				НоваяСтрока.Комментарий	= Результат.comment;
			КонецЕсли;	
		КонецЕсли;
		НоваяСтрока.ИдентификаторДокумента = Новый УникальныйИдентификатор(ТекСтрока.ref);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДокументСписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущаяСтрока = ДокументСписок.НайтиПоИдентификатору(ВыбраннаяСтрока);
	ОповеститьОВыборе(Новый Структура("Устройство,ИдентификаторДокумента", Устройство, ТекущаяСтрока.ИдентификаторДокумента));
	
КонецПроцедуры


&НаСервере
Процедура ПолучитьСписокДокументовСУстройства()

КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПараметрыКоманды(ИдентификаторУстройства)
	
	Параметры = Новый Структура;
	Параметры.Вставить("table_name", "Documents");
	Параметры.Вставить("query_type", "select");
	Параметры.Вставить("values", Новый Структура());
	Параметры.Вставить("where_values", Новый Структура("device_id, deletion_mark", ИдентификаторУстройства, 0));
	Параметры_ = МенеджерВебСокетВызовСервера.СтрокаВBase64(МенеджерВебСокетВызовСервера.ОбъектВJson(Параметры));
    query_param = МенеджерВебСокетВызовСервера.СтрокаВBase64(МенеджерВебСокетВызовСервера.ОбъектВJson(Новый Структура("query_param", Параметры_)));
	Возврат query_param;

КонецФункции

