#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	МенеджерВебСокетКлиент.ПодключитьФорму(ЭтотОбъект, Новый ОписаниеОповещения("ПриПолученииСоообщения",  ЭтотОбъект),
	,,, Новый ОписаниеОповещения("ПриОшибке", ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	МенеджерВебСокетКлиент.ФормаПриЗакрытии(УникальныйИдентификатор);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура СинхронизироватьССервером(Команда)
	
	Если НЕ Ждать КомпонентаДоступна(Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ОбъектКомпоненты = Ждать МенеджерВебСокетКлиент.ПолучитьТекущийОбъектКомпоненты();
	Результат = Ждать ОбъектКомпоненты.ПолучитьСтруктуруЗаписиАсинх("Users");
	Если Результат <> Неопределено Тогда
		СтруктураЗаписи = МенеджерВебСокетВызовСервера.ОбработатьОтветСервера(Результат.Значение);
		Если ТипЗнч(СтруктураЗаписи) = Тип("Структура") ТОгда
			УстановитьПараметрыЗаписиНаСервере(СтруктураЗаписи);
			СтруктураКомандСервера = Ждать ОбъектКомпоненты.ПолучитьСтруктуруКомандСервераАсинх();
			Если СтруктураКомандСервера <> Неопределено Тогда
				СтруктураКоманд = МенеджерВебСокетВызовСервера.ПрочитатьОтветСервера(СтруктураКомандСервера.Значение);
				Если ТипЗнч(СтруктураКоманд) = Тип("Структура") Тогда					
					//Здесь будет вызвано исключение если версия сервера не поддерживается
					ОбъектКомпоненты.КомандаСерверуАсинх(СтруктураКоманд.InsertOrUpdateUser, МенеджерВебСокетВызовСервера.ОбъектВJson(Новый Структура("record", СтруктураЗаписи)), 
					МенеджерВебСокетВызовСервера.ИдентификаторСтрокой(УникальныйИдентификатор));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция ТребуетсяЗаписатьЭлемент()
	Если Модифицированность ТОгда
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
КонецФункции
&НаКлиенте
Асинх Функция КомпонентаДоступна(ПоказыватьПредупреждения = Ложь)

	Если ТребуетсяЗаписатьЭлемент() Тогда
#Если НЕ ВебКлиент Тогда		
		Если ПоказыватьПредупреждения Тогда
			Ждать ПредупреждениеАсинх("Требуется записать элемент!");
		КонецЕсли;
#КонецЕсли		
		Возврат Ложь;
	КонецЕсли;

	Если МенеджерВебСокетКлиент.ПолучитьТекущийОбъектКомпоненты() = Неопределено Тогда
#Если НЕ ВебКлиент Тогда		
		Если ПоказыватьПредупреждения Тогда
			Ждать ПредупреждениеАсинх("Компонента не загружена!");
		КонецЕсли;
#КонецЕсли	
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ Ждать МенеджерВебСокетКлиент.Подключен() Тогда
#Если НЕ ВебКлиент Тогда		
		Если ПоказыватьПредупреждения Тогда
			Ждать ПредупреждениеАсинх("Сервер не доступен!");
		КонецЕсли;
#КонецЕсли	
		Возврат Ложь;				
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции
&НаСервере
Функция ПолучитьХешСуммы(ИсходнаяСтрока)
	ХешированиеДанных  = Новый ХешированиеДанных (ХешФункция.SHA1) ;
 	ХешированиеДанных.Добавить(ИсходнаяСтрока);
 	Возврат ПолучитьHexСтрокуИзДвоичныхДанных(ХешированиеДанных.ХешСумма)
КонецФункции

&НаСервере
Процедура УстановитьПараметрыЗаписиНаСервере(СтруктураЗаписи)
	мОбъект = РеквизитФормыВЗначение("Объект");	
	ИсходнаяСтрока = ВРег(Объект.Код) + НРег(XMLСтрока(Объект.Ссылка));
	Хеш = НРЕг(ПолучитьХешСуммы(ИсходнаяСтрока));

	Если СтруктураЗаписи.Свойство("_id") Тогда
		СтруктураЗаписи.Удалить("_id"); //автоинкрементное поле
	КонецЕсли;
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "ref", XMLСтрока(мОбъект.Ссылка));
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "first", мОбъект.Наименование);
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "second", мОбъект.Наименование);
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "hash", Хеш);
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "role", "not available");
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "performance", "");
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "parent", МенеджерВебСокетВызовСервера.ИдентификаторСтрокой(мОбъект.Родитель));
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "cache", "");
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "is_group", 1);
КонецПроцедуры

&НаКлиенте 
Процедура ПриОшибке(Результат, ДополнителныеПараметры) Экспорт
	//@skip-check use-non-recommended-method
	Сообщить(Результат.command + "::Error: " + Результат.message, СтатусСообщения.Важное);
КонецПроцедуры

&НаКлиенте
Процедура ПриПолученииСоообщения(Результат, ДополнителныеПараметры) Экспорт
	Попытка
		Если ТипЗнч(Результат) = Тип("Структура") Тогда
			Если Результат.command = "InsertOrUpdateUser" Тогда
				//@skip-check use-non-recommended-method
				Сообщить("Пользователь успешно синхронизирован с сервером!")
			ИначеЕсли Результат.command = "ClientLeave" Тогда 

			ИначеЕсли Результат.command = "ClientJoin" Тогда 

			КонецЕсли;
		КонецЕсли;
	Исключение
		//@skip-check use-non-recommended-method
		Сообщить("Не верный формат сообщения!", СтатусСообщения.Важное);
	КонецПопытки;
	
КонецПроцедуры
#КонецОбласти