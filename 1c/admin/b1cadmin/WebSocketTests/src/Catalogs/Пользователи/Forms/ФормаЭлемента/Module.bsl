
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступностьЭлементов();
	УстановитьНадписьПутогоПароляИБ();
	УстановитьНадписьПутогоПароляНаСервереWebSocket()
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если ЗначениеЗаполнено(Объект.ИдентификаторПользователяИБ) Тогда
		мОбъект = РеквизитФормыВЗначение("Объект");
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(мОбъект.ИдентификаторПользователяИБ);
		Если ПользовательИБ.Имя <> мОбъект.Код ТОгда
			мОбъект.Код = ПользовательИБ.Имя;
		КонецЕсли;
		Если ПользовательИБ.ПолноеИмя <> мОбъект.Наименование Тогда
			мОбъект.Наименование = ПользовательИБ.ПолноеИмя;
		КонецЕсли;
		ЗначениеВРеквизитФормы(мОбъект, "Объект");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
		
	ЛокальныеНастройки = МенеджерВебСокетВызовСервера.ПолучитьЛокальныеНастройкиКлиента(Объект.Ссылка);

	Если ТипЗнч(ЛокальныеНастройки) = Тип("Структура") ТОгда
		ИспользоватьУчетныеДанныеТекущегоПользователя = ЛокальныеНастройки.ИспользоватьДанныеПользователя;
		ИмяПользователя = ЛокальныеНастройки.ИмяПользователя;
		ХешПользователя = ЛокальныеНастройки.ХешПользователя;
		ПодключатсяАвтоматически = ЛокальныеНастройки.ПодключатсяАвтоматически;
		ВосстановитьСоединениеПриРазрыве = ЛокальныеНастройки.ВосстановитьСоединениеПриРазрыве;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если СокрЛП(ТекущийОбъект.Код) = "" ИЛИ СокрЛП(ТекущийОбъект.Наименование) = "" Тогда
		Отказ = Истина;
		//@skip-check use-non-recommended-method
		Сообщить("Не заполнены обязательные реквизиты!", СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	ОписаниеОшибки = "";
	Если НЕ СоздатьОбновитьПользователяИБ(ОписаниеОшибки, ТекущийОбъект) Тогда
		Отказ = Истина;
		//@skip-check use-non-recommended-method
		Сообщить(ОписаниеОшибки, СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущийОбъект.Ссылка) Тогда		
		КлючОбъекта = "WebCore";
		КлючНастроек = "Настройки";
		ЛокальныеНастройки = МенеджерВебСокетВызовСервера.ПолучитьЛокальныеНастройкиКлиента(ТекущийОбъект.Ссылка);
		Если НЕ ИспользоватьУчетныеДанныеТекущегоПользователя Тогда
			ЛокальныеНастройки.Вставить("ИмяПользователя", ИмяПользователя);
			ЛокальныеНастройки.Вставить("ХешПользователя", ХешПользователя);
		Иначе
			ЛокальныеНастройки.Вставить("ИмяПользователя", ИмяПользователя());
			Идентификатор = Пользователи.ПустойУникальныйИдентификатор();
			Если Метаданные.Справочники.Найти("Пользователи") = Неопределено Тогда
				ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(ИмяПользователя());
				Идентификатор = ПользовательИБ.УникальныйИдентификатор;
			Иначе
				Идентификатор = ТекущийОбъект.Ссылка.УникальныйИдентификатор();
			КонецЕсли;
			ИсходнаяСтрока = НРег(ЛокальныеНастройки.ИмяПользователя) + XMLСтрока(Идентификатор);
			ЛокальныеНастройки.Вставить("ХешПользователя", НРЕг(ПолучитьХешСуммы(ИсходнаяСтрока)));
		КонецЕсли;	
		ЛокальныеНастройки.Вставить("ИспользоватьДанныеПользователя", ИспользоватьУчетныеДанныеТекущегоПользователя);
		ЛокальныеНастройки.Вставить("ПодключатсяАвтоматически", ПодключатсяАвтоматически);
		ЛокальныеНастройки.Вставить("ВосстановитьСоединениеПриРазрыве", ВосстановитьСоединениеПриРазрыве);
		ХранилищеОбщихНастроек.Сохранить(КлючОбъекта, КлючНастроек, ЛокальныеНастройки, ,ИмяПользователя());
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
		
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИспользоватьУчетныеДанныеТекущегоПользователяПриИзменении(Элемент)
	УстановитьДоступностьЭлементов();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура УстановитьПарольПользователяИБ(Команда)
#Если НЕ ВебКлиент Тогда
	Если ТребуетсяЗаписатьЭлемент() Тогда
		Ждать ПредупреждениеАсинх("Требуется записать элемент!");
		Возврат;
	КонецЕсли;		
	Если ЭтоТекущийПользовательИБ() ТОгда
		Если Ждать ВопросАсинх("Элемент справочника является текущим пользователем!
		|Рекомендуется менять пароль в конфигураторе. Продолжить?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
#КонецЕсли			
	Элементы.ГруппаПарольПользователяИБ.Видимость = Истина;
	Элементы.ГруппаКнопкаУстановитьПароль.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПарольИБОтмена(Команда)
	Элементы.ГруппаПарольПользователяИБ.Видимость = Ложь;
	Элементы.ГруппаКнопкаУстановитьПароль.Видимость = Истина;	
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОбновитьПарольПользователяИБ(Команда)
	
	Если ТребуетсяЗаписатьЭлемент() Тогда
		Возврат;
	КонецЕсли;
	ОписаниеОшибки = Неопределено;
	Результат = ОбновитьПарольПользователяИБСервер(ОписаниеОшибки);
	Если НЕ Результат И НЕ ОписаниеОшибки = Неопределено Тогда
	#Если НЕ ВебКлиент Тогда
		Ждать ПредупреждениеАсинх(ОписаниеОшибки);	
	#КонецЕсли
		Возврат;
	КонецЕсли;	
	
	Элементы.ГруппаПарольПользователяИБ.Видимость = Ложь;
	Элементы.ГруппаКнопкаУстановитьПароль.Видимость = Истина;
	УстановитьНадписьПутогоПароляИБ();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПарольПользователяОтмена(Команда)
	Элементы.ГруппаПароль.Видимость = Ложь;
	Элементы.ГруппаКнопкаУстановитьПарольНаСервере.Видимость = Истина;
КонецПроцедуры

&НаКлиенте
Асинх Функция КомпонентаДоступна(ПоказыватьПредупреждения = Ложь)

	Если ТребуетсяЗаписатьЭлемент() Тогда
#Если НЕ ВебКлиент Тогда		
		Если ПоказыватьПредупреждения Тогда
			Ждать ПредупреждениеАсинх("Требуется записать элемент!");
		КонецЕсли;
#КонецЕсли		
		Возврат Ложь;
	КонецЕсли;

	Если МенеджерВебСокетКлиент.ПолучитьТекущийОбъектКомпоненты() = Неопределено Тогда
#Если НЕ ВебКлиент Тогда		
		Если ПоказыватьПредупреждения Тогда
			Ждать ПредупреждениеАсинх("Компонента не загружена!");
		КонецЕсли;
#КонецЕсли	
		Возврат Ложь;
	КонецЕсли;
	
	Если МенеджерВебСокетКлиент.Подключен() Тогда
#Если НЕ ВебКлиент Тогда		
		Если ПоказыватьПредупреждения Тогда
			Ждать ПредупреждениеАсинх("Сервер не доступен!");
		КонецЕсли;
#КонецЕсли	
		Возврат Ложь;				
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура УстановитьПараметрыЗаписиНаСервере(СтруктураЗаписи)
	мОбъект = РеквизитФормыВЗначение("Объект");
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "ref", XMLСтрока(мОбъект.Ссылка));
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "first", мОбъект.Код);
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "second", мОбъект.Наименование);
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "hash", ХешПользователя);
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "role", мОбъект.РольНаWebSocketСервере);
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "performance", "");
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "parent", МенеджерВебСокетВызовСервера.ПустаяСсылкаСтрокой());
	МенеджерВебСокетВызовСервера.ОтветСервераУстановитьЗначение(СтруктураЗаписи, "cache", "");
КонецПроцедуры

&НаКлиенте
Асинх Процедура СинхронизироватьССервером(Команда)
	
	Если НЕ Ждать КомпонентаДоступна(Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ОбещаниеКомпонента = Ждать МенеджерВебСокетКлиент.ПолучитьТекущийОбъектКомпоненты();
	ОбъектКомпоненты = ОбещаниеКомпонента.Значение;
	
	Результат = Ждать ОбъектКомпоненты.ПолучитьСтруктуруЗаписиАсинх("Users");
	Если Результат <> Неопределено Тогда
		СтруктураЗаписи = МенеджерВебСокетВызовСервера.ОбработатьОтветСервера(Результат.Значение);
		Если ТипЗнч(СтруктураЗаписи) = Тип("Структура") ТОгда
			УстановитьПараметрыЗаписиНаСервере(СтруктураЗаписи);
			СтруктураКомандСервера = Ждать ОбъектКомпоненты.ПолучитьСтруктуруКомандСервераАсинх();
			Если СтруктураКомандСервера <> Неопределено Тогда
				СтруктураКоманд = МенеджерВебСокетВызовСервера.ПрочитатьОтветСервера(СтруктураКомандСервера);
				Если ТипЗнч(СтруктураКоманд) = Тип("Структура") Тогда
					ОбъектКомпоненты.КомандаСерверу(СтруктураКоманд.InsertOrUpdateUser, МенеджерВебСокетВызовСервера.ОбъектВJson(СтруктураЗаписи), МенеджерВебСокетВызовСервера.ИдентификаторСтрокой(УникальныйИдентификатор));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура УстановитьПарольПользователя(Команда)
#Если НЕ ВебКлиент Тогда
	Если СокрЛП(ИмяПользователя) = "" Тогда
		Ждать ПредупреждениеАсинх("Не указано имя пользователя!");
		Возврат;
	КонецЕсли;
#КонецЕсли			
	Элементы.ГруппаПароль.Видимость = Истина;
	Элементы.ГруппаКнопкаУстановитьПарольНаСервере.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПолучитьХешУчетныхДанных(Команда)
	ИсходнаяСтрока = ВРег(ИмяПользователя) + ПарольПользователя;
	ХешПользователя = НРЕг(ПолучитьХешСуммы(ИсходнаяСтрока));
	Элементы.ГруппаПароль.Видимость = Ложь;
	Элементы.ГруппаКнопкаУстановитьПарольНаСервере.Видимость = Истина;
	УстановитьНадписьПутогоПароляНаСервереWebSocket();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьНадписьПутогоПароляНаСервереWebSocket()
	ТекстНадписи = "Пустой пароль";
	Если СокрЛП(ХешПользователя) <> "" Тогда
		ТекстНадписи = "Пароль установлен";
	КонецЕсли;
	Надпись = Новый ФорматированнаяСтрока(ТекстНадписи,, ЦветаСтиля.ЦветПоясняющейНадписи );
	Элементы.ДекорацияПарольУстановлен.Заголовок = Надпись;
КонецПроцедуры

&НаСервере
Процедура УстановитьНадписьПутогоПароляИБ()
	ТекстНадписи = "Пустой пароль";
	Если ЗначениеЗаполнено(Объект.ИдентификаторПользователяИБ) Тогда
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Объект.ИдентификаторПользователяИБ);
		Если ПользовательИБ <> Неопределено Тогда
			Если ПользовательИБ.ПарольУстановлен Тогда
				ТекстНадписи = "Пароль установлен";
			КонецЕсли;		
		КонецЕсли;
	КонецЕсли;
	Надпись = Новый ФорматированнаяСтрока(ТекстНадписи,, ЦветаСтиля.ЦветПоясняющейНадписи );
	Элементы.ДекорацияПарольИБУстановлен.Заголовок = Надпись;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементов()
	Элементы.ИмяПользователя.Доступность = НЕ ИспользоватьУчетныеДанныеТекущегоПользователя;
	Элементы.ИмяПользователя.АвтоОтметкаНезаполненного = НЕ ИспользоватьУчетныеДанныеТекущегоПользователя;
	Элементы.УстановитьПарольПользователя.Доступность = НЕ ИспользоватьУчетныеДанныеТекущегоПользователя;	
	Элементы.ГруппаИмяПользователяПароль.Доступность = НЕ ИспользоватьУчетныеДанныеТекущегоПользователя;	
КонецПроцедуры

&НаСервере
Функция ПолучитьХешСуммы(ИсходнаяСтрока)
	ХешированиеДанных  = Новый ХешированиеДанных (ХешФункция.SHA1) ;
 	ХешированиеДанных.Добавить(ИсходнаяСтрока);
 	Возврат ПолучитьHexСтрокуИзДвоичныхДанных(ХешированиеДанных.ХешСумма)
КонецФункции

&НаСервере
Функция ТребуетсяЗаписатьЭлемент()
	Если Модифицированность ТОгда
		Возврат Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(Объект.ИдентификаторПользователяИБ) Тогда
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;
КонецФункции

&НаСервере
Функция ЭтоТекущийПользовательИБ()
	Если ПользователиИнформационнойБазы.ТекущийПользователь().УникальныйИдентификатор = Объект.ИдентификаторПользователяИБ Тогда
		Возврат Истина
	КонецЕсли;
	Возврат Ложь;
КонецФункции

&НаСервере
Функция УстановитьЗначение(ТекущееЗначение, НовоеЗначение)
	Если ТекущееЗначение <> НовоеЗначение Тогда
		ТекущееЗначение = НовоеЗначение;
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаСервере
Функция СоздатьОбновитьПользователяИБ(ОписаниеОшибки, ТекущийОбъект)
	
	ПользовательИБ = Неопределено;
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.ИдентификаторПользователяИБ) Тогда
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(ТекущийОбъект.ИдентификаторПользователяИБ);
	Иначе
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(ТекущийОбъект.Код);
	КонецЕсли;
	
	Если ПользовательИБ = Неопределено Тогда
		ПользовательИБ = ПользователиИнформационнойБазы.СоздатьПользователя();	
	КонецЕсли;
	ЗаписатьЭлемент = Ложь;
	Если УстановитьЗначение( ПользовательИБ.Имя, ТекущийОбъект.Код) ТОгда
		ЗаписатьЭлемент = Истина;	
	КонецЕсли;	
	Если УстановитьЗначение( ПользовательИБ.ПолноеИмя, ТекущийОбъект.Наименование) ТОгда
		ЗаписатьЭлемент = Истина;	
	КонецЕсли;
	Если ЗаписатьЭлемент Тогда
		Попытка
			ПользовательИБ.АутентификацияСтандартная = Истина;
			ПользовательИБ.Записать();
		Исключение
			ОписаниеОшибки = ОписаниеОшибки();
			Возврат Ложь;
		КонецПопытки;
	КонецЕсли;	
	
	ТекущийОбъект.ИдентификаторПользователяИБ = ПользовательИБ.УникальныйИдентификатор;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ОбновитьПарольПользователяИБСервер(ОписаниеОшибки)
			
	ПользовательИБ = Неопределено;
	Если НЕ ЗначениеЗаполнено(Объект.ИдентификаторПользователяИБ) Тогда
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоУникальномуИдентификатору(Объект.ИдентификаторПользователяИБ);
	Иначе
		ПользовательИБ = ПользователиИнформационнойБазы.НайтиПоИмени(Объект.Код);
	КонецЕсли;
	
	Если ПользовательИБ = Неопределено Тогда
		ОписаниеОшибки = "Пользователь информационной базы не найден!";
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		ПользовательИБ.Пароль = ПарольПользователяИБ;
		ПользовательИБ.Записать();
	Исключение
		ОписаниеОшибки = ОписаниеОшибки();
		Возврат Ложь;			
	КонецПопытки;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти