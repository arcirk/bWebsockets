

#Область ОбработчикиСобытийФормы

//@skip-check module-structure-form-event-regions
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СтруктураОповещений = МенеджерВебСокетКлиент.ПолучитьСтруктуруОповещенийФормы();
	СтруктураОповещений.Вставить("ОповещениеОСообщении", Новый ОписаниеОповещения("ПриПолученииСоообщения",  ЭтотОбъект));
	СтруктураОповещений.Вставить("ОповещениеООшибке", Новый ОписаниеОповещения("ПриОшибке",  ЭтотОбъект));
	МенеджерВебСокетКлиент.ПодключитьФорму(ЭтотОбъект, СтруктураОповещений);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	МенеджерВебСокетКлиент.ФормаПриЗакрытии(УникальныйИдентификатор);
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Асинх Процедура СинхронизироватьССервером(Команда)
	Если НЕ Ждать КомпонентаДоступна(Истина) Тогда
		Возврат;
	КонецЕсли;	
	ОбъектКомпоненты = Ждать МенеджерВебСокетКлиент.ПолучитьТекущийОбъектКомпоненты();
	СтруктураЗаписи = Ждать ОбъектКомпоненты.ПолучитьСтруктуруЗаписиАсинх("PriceTypes");
	ШаблонСтруктуры = МенеджерВебСокетВызовСервера.ОбработатьОтветСервера(СтруктураЗаписи.Значение);
	Если ШаблонСтруктуры.Свойство("_id") Тогда
		ШаблонСтруктуры.Удалить("_id");
	КонецЕсли;
	Если ШаблонСтруктуры <> Неопределено Тогда
		МассивЗаписей = ПолучитьМассивЗаписей(ШаблонСтруктуры);
		СтруктураПараметровЗапроса = Новый Структура();
		СтруктураПараметровЗапроса.Вставить("table_name", "PriceTypes");	
		СтруктураПараметровЗапроса.Вставить("values_array", МассивЗаписей);	
		СтруктураПараметровЗапроса.Вставить("where_is_exists_field", "ref");	
		ПараметрыЗапроса = МенеджерВебСокетВызовСервера.СтрокаВBase64(МенеджерВебСокетВызовСервера.ОбъектВJson(СтруктураПараметровЗапроса));				
		СтруктураКомандСервера = Ждать ОбъектКомпоненты.ПолучитьСтруктуруКомандСервераАсинх();
		Если СтруктураКомандСервера <> Неопределено Тогда
			СтруктураКоманд = МенеджерВебСокетВызовСервера.ПрочитатьОтветСервера(СтруктураКомандСервера.Значение);
			Если ТипЗнч(СтруктураКоманд) = Тип("Структура") Тогда					
				//Здесь будет вызвано исключение если версия сервера не поддерживается
				ОбъектКомпоненты.КомандаСерверуАсинх(СтруктураКоманд.InsertToDatabaseFromArray, 
				МенеджерВебСокетВызовСервера.ОбъектВJson(Новый Структура("query_param", ПараметрыЗапроса)), 
				МенеджерВебСокетВызовСервера.ИдентификаторСтрокой(УникальныйИдентификатор));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;		
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ПолучитьМассивЗаписей(ШаблонЗаписи)
	
	мРезультат = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТипыЦенНоменклатуры.Ссылка,
		|	ТипыЦенНоменклатуры.Наименование
		|ИЗ
		|	Справочник.ТипыЦенНоменклатуры КАК ТипыЦенНоменклатуры
		|ГДЕ
		|	НЕ ТипыЦенНоменклатуры.ПометкаУдаления";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		СтруктураЗаписи = МенеджерВебСокетВызовСервера.СкопироватьКлючиСтруктуры(ШаблонЗаписи);
		СтруктураЗаписи.ref = XMLСтрока(ВыборкаДетальныеЗаписи.Ссылка);
		СтруктураЗаписи.first = СокрЛП(ВыборкаДетальныеЗаписи.Наименование);
		мРезультат.Добавить(СтруктураЗаписи);
	КонецЦикла;
	
	Возврат мРезультат;
	
КонецФункции


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Функция КомпонентаДоступна(ПоказыватьПредупреждения = Ложь)

	Если МенеджерВебСокетКлиент.ПолучитьТекущийОбъектКомпоненты() = Неопределено Тогда
#Если НЕ ВебКлиент Тогда		
		Если ПоказыватьПредупреждения Тогда
			Ждать ПредупреждениеАсинх("Компонента не загружена!");
		КонецЕсли;
#КонецЕсли	
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ Ждать МенеджерВебСокетКлиент.Подключен() Тогда
#Если НЕ ВебКлиент Тогда		
		Если ПоказыватьПредупреждения Тогда
			Ждать ПредупреждениеАсинх("Сервер не доступен!");
		КонецЕсли;
#КонецЕсли	
		Возврат Ложь;				
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПриОшибке(Результат, ДополнителныеПараметры) Экспорт
	//@skip-check use-non-recommended-method
	Сообщить(Результат.command + "::Error: " + Результат.message, СтатусСообщения.Важное);
КонецПроцедуры

&НаКлиенте
Процедура ПриПолученииСоообщения(Результат, ДополнителныеПараметры) Экспорт
	Попытка
		Если ТипЗнч(Результат) = Тип("Структура") Тогда
//			Если Результат.command = "ExecuteSqlQuery" Тогда
//				ПараметрыЗапроса = МенеджерВебСокетВызовСервера.ОбработатьОтветСервера(Результат.param);
//				РезультатЗапроса = МенеджерВебСокетВызовСервера.ОбработатьОтветСервера(Результат.result);
//				Если РезультатЗапроса.Свойство("rows") Тогда
//					мПараметры = МенеджерВебСокетВызовСервера.ОбработатьОтветСервера(ПараметрыЗапроса.query_param);
//					Если ТипЗнч(мПараметры) = Тип("Структура") ТОгда
//						Если мПараметры.table_name = "DevicesType" Тогда
//							ОбновитьОборудованиеНаСервере(РезультатЗапроса.rows);						
//						КонецЕсли;
//					КонецЕсли;
//				КонецЕсли;
//			КонецЕсли;
		КонецЕсли; 
	Исключение
		//@skip-check use-non-recommended-method
		Сообщить("Не верный формат сообщения!", СтатусСообщения.Важное);
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьОборудованиеНаСервере(МассивСтрок)
	Для Каждого ТекСтрока Из МассивСтрок Цикл
		ТекЭлемент = Справочники.ТипыУстройствИКомпьютеров.ПолучитьСсылку(Новый УникальныйИдентификатор(ТекСтрока.ref));
		Если ТекЭлемент.ПолучитьОбъект() = Неопределено Тогда
			НовыйОбъект = Справочники.ТипыУстройствИКомпьютеров.СоздатьЭлемент();
			НовыйОбъект.УстановитьСсылкуНового(ТекЭлемент);
			НовыйОбъект.УстановитьНовыйКод();
			НовыйОбъект.Наименование = ТекСтрока.first;
			НовыйОбъект.Записать();
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти